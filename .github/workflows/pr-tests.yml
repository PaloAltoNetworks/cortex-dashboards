name: PR JSON Check

on:
  pull_request:
    branches: [ main ] 

jobs:
  test-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            fetch-depth: 0

      - name: Check for any changed JSON files
        id: check-json-files
        run: |
            base_sha=${{ github.event.pull_request.base.sha }}
            head_sha=${{ github.event.pull_request.head.sha }}
            echo "nothingToScan=false" >> $GITHUB_OUTPUT

            echo "Comparing base commit $base_sha with head commit $head_sha"

            # Get a list of changed JSON files. The `|| true` ensures this line doesn't fail the script if no .json files are found.
            json_files=$(git diff --name-only $base_sha $head_sha | grep '.json$' || true)

            echo "Changed JSON files: $json_files"

            # Check if the result is empty. If so, it's a success.
            if [ -z "$json_files" ]; then
                echo "No JSON files were changed in this PR. ‚úÖ"
                echo "nothingToScan=true" >> $GITHUB_OUTPUT
                exit 0
            fi

      - name: Check for email address in JSON files
        if: steps.check-json-files.outputs.nothingToScan != 'true'
        run: |
            echo "Checking the following JSON files:"
            echo "$json_files"

            for file in $json_files; do
                echo "---"
                echo "Checking file: $file"
                if ! grep -q '"creator_mail":' "$file"; then
                echo "‚û°Ô∏è Key 'creator_mail' not found in $file. Skipping."
                continue
                fi

                creator_mail_value=$(jq -r '.creator_mail' "$file")
                if [ "$creator_mail_value" == "" ]; then
                    echo "‚úÖ Success: 'creator_mail' is an empty string."
                else
                    echo "‚ùå Error: 'creator_mail' should be an empty string, but found '$creator_mail_value'."
                exit 1
                fi
            done

            echo "---"
            echo "All checks passed for all JSON files. üéâ"

      - name: Check for tenant URL in JSON files
        if: steps.check-json-files.outputs.nothingToScan != 'true'
        run: |
            echo "Checking the following JSON files:"
            echo "$json_files"

            for file in $json_files; do
                echo "---"
                echo "Checking file: $file"
                if ! grep -q '"url":' "$file"; then
                echo "‚û°Ô∏è Key 'url' not found in $file. Skipping."
                continue
                fi

                url_value=$(jq -r '.url' "$file")
                if [[ "$url_value" == *"paloaltonetworks.com"* ]]; then
                    echo "‚úÖ Success: 'url' does not containe tenant URL."
                else
                    echo "‚ùå Error: 'url' should not contain tenant URL, but found '$url_value'."
                exit 1
                fi
            done